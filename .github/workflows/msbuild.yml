# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on: [push, pull_request]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all

    steps:
    - uses: actions/checkout@v4.1.7

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} ${{ env.SOLUTION_FILE_PATH }}
      
    - uses: actions/upload-artifact@v4.3.3
      with:
        name: Arsenal-${{ env.BUILD_CONFIGURATION }}
        path: output/${{ env.BUILD_CONFIGURATION }}/*.dll

    - uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Create release
      uses: actions/create-release@v1.1.4
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: Arsenal
        tag_name: v1.0.0
      env:
        GITHUB_TOKEN: ${{ github.token }}
      
    - name: Upload release
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/${{ env.BUILD_CONFIGURATION }}/*.dll
        asset_name: Arsenal-${{ env.BUILD_CONFIGURATION }}.dll
        asset_content_type: application/dll
